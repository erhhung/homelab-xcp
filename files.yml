---
- name: Set up admin user's home directory
  hosts: xcphosts
  gather_facts: false
  vars_files:
    - vars/files.yml
  pre_tasks:
    - name: Include tasks to gather XCP-ng facts
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/xcpfacts.yml
      when: xcp_host_uuid is undefined

    - name: Define mounted SR paths with facts
      ansible.builtin.set_fact:
        iso_sr_path: /srv/iso
        backup_sr_path: /run/sr-mount/{{ backup_sr_uuid or '.not.found' }}

    - name: Check if ISO SR directory exists
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/stat_module.html
      ansible.builtin.stat:
        path: "{{ iso_sr_path }}"
      register: iso_sr_dir

    - name: Check if backup SR directory exists
      ansible.builtin.stat:
        path: "{{ backup_sr_path }}"
      register: backup_sr_dir
  tasks:
    - name: Create symlink ~/isos -> {{ iso_sr_path }}
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
      ansible.builtin.file:
        src: "{{ iso_sr_path }}"
        dest: "{{  ansible_facts['user_dir'] }}/isos"
        state: link
      when: iso_sr_dir.stat.exists
      notify: Touch symlinks and copied files

    - name: Create symlink ~/backups to backup SR
      ansible.builtin.file:
        src: "{{ backup_sr_path }}"
        dest: "{{  ansible_facts['user_dir'] }}/backups"
        state: link
      when: backup_sr_dir.stat.exists
      notify: Touch symlinks and copied files

    - name: Copy dot files and README files
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/{{ item }}"
        dest: "{{ ansible_facts['user_dir'] }}/{{ item }}"
        mode: "0644"
        directory_mode: "0755"
      loop: "{{ copy_files }}"
      timeout: 120
      notify: Touch symlinks and copied files
  handlers:
    - name: Touch symlinks and copied files
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
      ansible.builtin.shell: |
        # run Bash to load .bashrc in order to
        # use exported functions and variables
        exec /bin/bash -l <<'EOT'
        # zero out file times MM:ss
        _touch -t 00 . isos backups
        # now do the same again but recursively
        touchall -t 00 {{ copy_files | map('quote') | join(' ') }}
        EOT
      changed_when: true
  any_errors_fatal: true
